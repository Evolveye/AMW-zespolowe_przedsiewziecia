{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./src/pages/group/it.js","webpack:///./src/pages/group/group.module.css"],"names":["menyItems","urn","name","permName","menuLisBuilder","perms","platformAndGroupQuery","filter","map","key","className","to","children","query","urlSearchParams","platformId","get","groupId","useState","getGroupPerms","menuLis","setMenuRows","useEffect","length","meetsLisMap","id","dateStart","description","title","getDate","color","linkAddress","tasksLisMap","expire","created","href","urlMeets","URLS","MEET_FROM_GROUP$ID_GET","replace","urlTasks","GROUPS$ID_TASKS_GET","console","log","authFetch","url","meets","meet","meetsLis","setMeetsRows","tasks","task","tasksLis","setTasksRows","cb","classes","wrapper","rightColumn","module","exports"],"mappings":"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","file":"component---src-pages-group-it-js-db181c2217c133881ff1.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, getGroupPerms } from \"../utils/auth.js\"\r\n//import URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\n//import FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `materials`, name: `Materiały`, permName: `isMaster` },\r\n  { urn: `tasks`, name: `Zadania`, permName: `isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\n/*\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n*/\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  //const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  /*\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  */\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  /*\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n*/\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport { urlSearchParams, getDate } from \"../../utils/functions.js\"\r\nimport {\r\n  authFetch\r\n} from \"../../utils/auth.js\"\r\nimport FlatTile from \"../../models/flatTile.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport classes from \"./group.module.css\"\r\n\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n\r\nconst tasksLisMap = ({ id, created,expire, description, title }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={ getDate(`YYYY.MM.DD - hh:mm`, expire)}\r\n      description={title}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/task/it?${platformAndGroupQuery}&taskId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n\r\nexport default () => {\r\n  const query = urlSearchParams()\r\n  const href = `/platform/it?platformId=${query.get(\"platformId\")}`\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  const urlMeets = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n  const urlTasks = URLS.GROUPS$ID_TASKS_GET.replace(`:groupId`, groupId)\r\n  console.log({urlTasks})\r\n\r\n  \r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url:urlMeets }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  const [tasksLis, setTasksRows] = useState(\r\n    (authFetch({ url:urlTasks }) || { tasks: [] }).tasks.map(task =>\r\n      tasksLisMap(task, platformAndGroupQuery)\r\n    )\r\n  )\r\n\r\n  console.log(urlTasks)\r\n\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url:urlMeets,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [urlMeets, platformAndGroupQuery])\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url: urlTasks,\r\n      cb: ({ tasks }) =>\r\n        setTasksRows(\r\n          tasks.map(task => tasksLisMap(task, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [urlTasks, platformAndGroupQuery])\r\n  console.log({tasksLis})\r\n  return (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={href}>\r\n        Powrót do widoku platformy\r\n      </Link>\r\n\r\n      <article className={classes.wrapper}>\r\n        <article className={classes.rightColumn}>\r\n          <h2>Spotkania</h2>\r\n          <ul className=\"list\">\r\n            {meetsLis.length ? meetsLis : \"Nie należysz do żadnego spotkania\"}\r\n          </ul>\r\n        </article>\r\n        \r\n        <article className={classes.rightColumn}>\r\n          <h2>Zadania</h2>\r\n          <ul className=\"list\">{tasksLis.length ? tasksLis : \"Brak zadań\"}</ul>\r\n        </article>\r\n      </article>\r\n    </Layout>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightColumn\":\"group-module--rightColumn--ByMj0\",\"wrapper\":\"group-module--wrapper--2dcHp\"};"],"sourceRoot":""}