{"version":3,"sources":["webpack:///./src/components/meetLayout.js","webpack:///./src/pages/meet/users.js"],"names":["menyItems","participantsLisMap","id","name","surname","avatar","key","src","alt","title","color","menuLisBuilder","perms","meetQuery","filter","permName","map","urn","className","to","children","query","urlSearchParams","platformId","get","groupId","meetId","url","URLS","MEET$ID_USERS_GET","replace","useState","getMeetPerms","menuLis","setMenuRows","authFetch","participants","participantsLis","setParticipantsLis","useEffect","cb","length","href"],"mappings":"8FAAA,iGAUMA,EAAY,GAKZC,EAAqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAAb,EAAsBC,OAAtB,OACzB,wBAAIC,IAAKJ,GACP,kBAAC,IAAD,CACEK,IAAI,uBACJC,IAAQL,EAAL,YACHM,MAAUN,EAAL,IAAaC,EAClBM,MAAK,cAKLC,EAAiB,SAACC,EAAOC,GAAR,OACrBb,EACGc,QAAO,gBAAGC,EAAH,EAAGA,SAAH,OAAmBA,GAAYH,EAAMG,MAC5CC,KAAI,gBAAGC,EAAH,EAAGA,IAAKd,EAAR,EAAQA,KAAR,OACH,wBAAIG,IAAKW,EAAKC,UAAU,aACtB,kBAAC,OAAD,CAAMC,GAAE,SAAWF,EAAX,IAAkBJ,GAAcV,QAIjC,gBAAmC,IAAhCiB,EAA+B,EAA/BA,SAA+B,IAArBF,iBAAqB,WACzCG,EAAQC,cAERC,EAAaF,EAAMG,IAAN,cACbC,EAAUJ,EAAMG,IAAN,WACVE,EAASL,EAAMG,IAAN,UACTX,EAAS,cAAiBU,EAAjB,YAAuCE,EAAvC,WAAyDC,EAClEC,EAAMC,IAAKC,kBAAkBC,QAAvB,UAA0CJ,GAPP,EAShBK,mBAC7BpB,EAAeqB,YAAaN,IAAW,GAAIb,IADtCoB,EATwC,KAS/BC,EAT+B,OAYDH,oBAC3CI,YAAU,CAAER,SAAU,CAAES,aAAc,KAAMA,aAAapB,IACxDf,IAFGoC,EAZwC,KAYvBC,EAZuB,KA8B/C,OAZAC,qBAAU,WACRP,YAAaN,GAAQ,SAAAd,GACnBsB,EAAYvB,EAAeC,GAAS,GAAIC,OAG1CsB,YAAU,CACRR,IAAKC,IAAKC,kBAAkBC,QAAvB,UAA0CJ,GAC/Cc,GAAI,gBAAGJ,EAAH,EAAGA,aAAH,OACFE,EAAmBF,EAAapB,IAAIf,SAEvC,CAACyB,EAAQb,IAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQK,UAAU,wBAChB,yBAAKA,UAAU,oCAEXe,EAAQQ,OACN,oCACA,8CACA,wBAAIvB,UAAU,QAAQe,GACtB,8BAEE,KAGN,iDACA,wBAAIf,UAAU,QACXmB,IAIL,6BAASnB,UAAS,qCAAuCA,GACtDE,O,kCCtFX,oEASe,qBACb,IAAMC,EAAQC,cACRoB,EAAI,uBAA0BrB,EAAMG,IACxC,cADQ,YAEGH,EAAMG,IAAI,WAFb,WAEkCH,EAAMG,IAAI,UAEtD,OACE,kBAAC,IAAD,CAAQN,UAAU,eAChB,kBAAC,OAAD,CAAMA,UAAU,cAAcC,GAAIuB,GAAlC,8BAIA","file":"component---src-pages-meet-users-js-ef477c8bcbcdd71a8fa4.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { authFetch, AuthorizedContent, getMeetPerms } from \"../utils/auth.js\"\r\nimport { processUrn, urlSearchParams } from \"../utils/functions.js\"\r\nimport URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`canEditDetails` },\r\n  // { urn: `users`, name: `Użytkownicy`, permName:`canManageUsers` },\r\n]\r\n\r\nconst participantsLisMap = ({ id, name, surname, avatar }) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      src=\"{processUrn(avatar)}\"\r\n      alt={`${name}'s avatar`}\r\n      title={`${name} ${surname}`}\r\n      color={`#3e8bff`}\r\n    />\r\n  </li>\r\n)\r\n\r\nconst menuLisBuilder = (perms, meetQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/meet/${urn}?${meetQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const meetId = query.get(`meetId`)\r\n  const meetQuery = `platformId=${platformId}&groupId=${groupId}&meetId=${meetId}`\r\n  const url = URLS.MEET$ID_USERS_GET.replace(`:meetId`, meetId)\r\n\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getMeetPerms(meetId) || {}, meetQuery)\r\n  )\r\n  const [participantsLis, setParticipantsLis] = useState(\r\n    (authFetch({ url }) || { participants: [] }).participants.map(\r\n      participantsLisMap\r\n    )\r\n  )\r\n\r\n  useEffect(() => {\r\n    getMeetPerms(meetId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, meetQuery))\r\n    })\r\n\r\n    authFetch({\r\n      url: URLS.MEET$ID_USERS_GET.replace(`:meetId`, meetId),\r\n      cb: ({ participants }) =>\r\n        setParticipantsLis(participants.map(participantsLisMap)),\r\n    })\r\n  }, [meetId, meetQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {\r\n            menuLis.length ? (\r\n              <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n              </>\r\n            ) : null\r\n          }\r\n\r\n          <h2>Lista uczestników</h2>\r\n          <ul className=\"list\">\r\n            {participantsLis}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../../utils/functions.js\"\r\n\r\nimport Layout from \"../../components/meetLayout.js\"\r\n\r\n// import classes from \"./group.module.css\"\r\n\r\nexport default () => {\r\n  const query = urlSearchParams()\r\n  const href = `/meet/it?platformId=${query.get(\r\n    \"platformId\"\r\n  )}&groupId=${query.get(\"groupId\")}&meetId=${query.get(\"meetId\")}`\r\n\r\n  return (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={href}>\r\n        Powrót do widoku spotkania\r\n      </Link>\r\n\r\n      <h1>Spotkanie -- uczestnicy</h1>\r\n    </Layout>\r\n  )\r\n}\r\n"],"sourceRoot":""}