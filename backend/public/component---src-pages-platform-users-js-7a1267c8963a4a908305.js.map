{"version":3,"sources":["webpack:///./src/pages/platform/users.js","webpack:///./src/components/select.js","webpack:///./src/components/platformLayout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["PlatformUsers","props","render","className","to","platformId","fetchGetAddress","URLS","PLATFORM$ID_USERS_GET","replace","fetchPostAddress","PLATFORM$ID_USERS_POST","fetchDeleteAddress","PLATFORM$ID_USERS$ID_DELETE","deleteIdParameterName","responseGetDataName","responsePostDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","name","processor","perm","translateRole","titleFields","inputFieldsComponents","perms","component","Select","disabled","fetchDataAddress","PLATFORM$ID_PERMISSIONS_GET","fetchGetDataName","fetchDataFilter","fetchDataProcessor","value","text","query","urlSearchParams","get","React","Component","emptyOption","key","state","options","ref","createRef","fetch","onChange","fetchWithStatusProcessing","headers","Authentication","getToken","then","data","arr","filter","field","map","length","concat","setState","current","onBlur","componentDidMount","autoFetch","this","undefined","navItems","urn","permName","groupsLisMap","id","title","color","linkAddress","menuLisBuilder","children","url","GROUP_FROM_PLATFORM$ID_GET","useState","authFetch","groups","group","groupsLis","setGroupsRows","getPlatformPerms","menuLis","setMenuRows","useEffect","cb","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","error","rows","creatingLis","creationAllowed","onFillListeners","updateNewField","eOrName","element","deleteRow","method","code","success","console","old","forEach","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","enctype","FormData","entries","k","v","log","append","ERRORS","isBrowser","window","location","reload","addToTable","itemOrItems","Array","isArray","newRows","obj","fields","x","propName","alt","processorData","entire","push","type","onClick","objectField","objectFieldName","customInputField","colSpan","colSpans","getTableData","onTableFillTrigger","Date","now","Math","random"],"mappings":"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","file":"component---src-pages-platform-users-js-7a1267c8963a4a908305.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, translateRole } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/platformLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\nimport Select from \"../../components/select.js\"\r\n\r\nexport default class PlatformUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.platformId = query.get(`platformId`)\r\n  }\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link\r\n        className=\"return_link\"\r\n        to={`/platform/it?platformId=${this.platformId}`}\r\n      >\r\n        Powrót do widoku platformy\r\n      </Link>\r\n\r\n      <h1>Zarządzanie użytkownikami platformy</h1>\r\n\r\n      <TableForm\r\n        fetchGetAddress={URLS.PLATFORM$ID_USERS_GET.replace(\r\n          `:platformId`,\r\n          this.platformId\r\n        )}\r\n        fetchPostAddress={URLS.PLATFORM$ID_USERS_POST.replace(\r\n          `:platformId`,\r\n          this.platformId\r\n        )}\r\n        fetchDeleteAddress={URLS.PLATFORM$ID_USERS$ID_DELETE.replace(\r\n          `:platformId`,\r\n          this.platformId\r\n        )}\r\n        deleteIdParameterName=\":userId\"\r\n        responseGetDataName=\"users\"\r\n        responsePostDataName=\"user\"\r\n        buttonAdd=\"Dodaj do platformy\"\r\n        buttonDelete=\"Usuń z platformy\"\r\n        staticPostBodyData={{ platformId: this.platformId }}\r\n        objectsFields={[\r\n          `name`,\r\n          `surname`,\r\n          `email`,\r\n          { name: `perms`, processor: (perm={}) => translateRole(perm.name, `Student`) },\r\n        ]}\r\n        titleFields={[`Imię`, `Nazwisko`, `Email`, `Rola`]}\r\n        inputFieldsComponents={{\r\n          perms: {\r\n            component: Select,\r\n            props: {\r\n              name: `roleName`,\r\n              disabled: true,\r\n              fetchDataAddress: URLS.PLATFORM$ID_PERMISSIONS_GET.replace(\r\n                `:platformId`,\r\n                this.platformId\r\n              ),\r\n              fetchGetDataName: `permissions`,\r\n              fetchDataFilter: ({ name }) => name !== `owner`,\r\n              fetchDataProcessor: ({ name }) => ({\r\n                value: name,\r\n                text: translateRole(name),\r\n              }),\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport { fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\nexport default class Select extends React.Component {\r\n  emptyOption = (\r\n    <option key=\"empty\" value=\"\">\r\n      {\" \"}\r\n      -- brak opcji --{\" \"}\r\n    </option>\r\n  )\r\n\r\n  state = {\r\n    options: [this.emptyOption],\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const { autoFetch } = this.props\r\n\r\n    if (autoFetch === undefined || autoFetch) this.fetch()\r\n  }\r\n\r\n  fetch = () => {\r\n    const {\r\n      fetchDataAddress,\r\n      fetchDataFilter,\r\n      fetchDataProcessor,\r\n      fetchGetDataName,\r\n      onChange,\r\n    } = this.props\r\n\r\n    fetchWithStatusProcessing(fetchDataAddress, {\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    })\r\n      .then(data => data[fetchGetDataName])\r\n      .then(arr =>\r\n        fetchDataFilter\r\n          ? arr.filter(field => this.props.fetchDataFilter(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        fetchDataProcessor\r\n          ? arr.map(field => this.props.fetchDataProcessor(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        arr.map(field =>\r\n          typeof field === `string` ? { value: field, text: field } : field\r\n        )\r\n      )\r\n      .then(arr =>\r\n        arr.map(({ value, text }) => (\r\n          <option key={value} value={value}>\r\n            {text}\r\n          </option>\r\n        ))\r\n      )\r\n      .then(options =>\r\n        options.length ? options : options.concat([this.emptyOption])\r\n      )\r\n      .then(options => this.setState({ options }))\r\n      .then(() => onChange && onChange(this.ref.current))\r\n  }\r\n\r\n  render = () => (\r\n    <select\r\n      name={this.props.name}\r\n      ref={this.ref}\r\n      onBlur={this.props.onChange}\r\n      disabled={this.props.disabled ?? false}\r\n    >\r\n      {this.state.options}\r\n    </select>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport URLS from \"../utils/urls.js\"\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport {\r\n  AuthorizedContent,\r\n  getPlatformPerms,\r\n  authFetch,\r\n} from \"../utils/auth.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst navItems = [\r\n  { urn: `settings`, name: `Ogólne`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName: `isMaster` },\r\n  { urn: `groups`, name: `Grupy`, permName: `isMaster` },\r\n]\r\n\r\nconst groupsLisMap = ({ id, name }, platformId) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={name}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/group/it?platformId=${platformId}&groupId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n\r\nconst menuLisBuilder = (perms, platformId) =>\r\n  navItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/platform/${urn}?platformId=${platformId}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n  const platformId = query.get(`platformId`)\r\n  const url = URLS.GROUP_FROM_PLATFORM$ID_GET.replace(`:platformId`, platformId)\r\n\r\n  const [groupsLis, setGroupsRows] = useState(\r\n    (authFetch({ url }) || { groups: [] }).groups.map(group =>\r\n      groupsLisMap(group, platformId)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getPlatformPerms(platformId) || {}, platformId)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ groups }) =>\r\n        setGroupsRows(groups.map(group => groupsLisMap(group, platformId))),\r\n    })\r\n  }, [url, platformId])\r\n\r\n  useEffect(() => {\r\n    getPlatformPerms(platformId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformId))\r\n    })\r\n  }, [platformId])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Grupy</h2>\r\n          <ul className=\"list\">\r\n            {groupsLis.length ? groupsLis : \"Nie należysz do żadnej grupy\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n    console.log(1)\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      console.log(2, data)\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n    console.log(3)\r\n  }\r\n\r\n  updateNewField = (eOrName, value=null) => {\r\n    const element = eOrName.target || eOrName\r\n\r\n    this.setState({ [value ? eOrName : element.name]:(value || element.value) })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    const headers =  { Authentication: `Bearer ${getToken()}` }\r\n    let body = JSON.stringify({ ...fieldsData, ...this.props.staticPostBodyData })\r\n\r\n    if (this.props.enctype === `multipart/form-data`) {\r\n      body = new FormData()\r\n\r\n      Object.entries({ ...fieldsData, ...this.props.staticPostBodyData }).forEach( ([ k, v ]) => {\r\n        console.log({ k, v })\r\n        body.append( k, v )\r\n      } )\r\n    } else headers[ \"Content-Type\" ] = `application/json`\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers,\r\n      body,\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.log({data})\r\n\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          const processor = field.processor || (x => x)\r\n          const propName = field.alt || field.name\r\n          const processorData = field.entire ? obj : obj[ propName ]\r\n\r\n          fields.push(\r\n            <td key={field.name}>{processor( processorData )}</td>\r\n          )\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n              {this.props.buttonDelete}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      {console.log(4)}\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n          {console.log(5)}\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string.isRequired,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string.isRequired,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}