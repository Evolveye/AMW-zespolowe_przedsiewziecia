{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./src/components/select.js","webpack:///./src/pages/group/users.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["menyItems","urn","name","permName","menuLisBuilder","perms","platformAndGroupQuery","filter","map","key","className","to","children","query","urlSearchParams","platformId","get","groupId","useState","getGroupPerms","menuLis","setMenuRows","useEffect","length","Select","emptyOption","value","state","options","ref","React","createRef","fetch","props","fetchDataAddress","fetchDataFilter","fetchDataProcessor","fetchGetDataName","onChange","fetchWithStatusProcessing","headers","Authentication","getToken","then","data","arr","field","text","concat","setState","current","render","onBlur","disabled","componentDidMount","autoFetch","this","undefined","Component","PlatformGroups","href","fetchPostAddress","URLS","GROUP$ID_USERS_POST","replace","fetchGetAddress","GROUP$ID_USERS_GET","fetchDeleteAddress","GROUP$ID_USERS$ID_DELETE","deleteIdParameterName","responseGetDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","processor","perm","translateRole","titleFields","inputFieldsComponents","component","onTableFillTrigger","PLATFORM$ID_USERS_GET","getTableData","id","surname","GROUP$ID_PERMISSIONS_GET","colSpans","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","error","rows","creatingLis","creationAllowed","onFillListeners","updateNewField","eOrName","element","deleteRow","method","code","success","console","old","forEach","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","enctype","FormData","entries","k","v","log","append","ERRORS","isBrowser","window","location","reload","responsePostDataName","addToTable","itemOrItems","Array","isArray","newRows","obj","fields","x","propName","alt","processorData","entire","push","type","onClick","objectField","objectFieldName","customInputField","colSpan","Date","now","Math","random"],"mappings":"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","file":"component---src-pages-group-users-js-294e55094a1fed03b546.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, getGroupPerms } from \"../utils/auth.js\"\r\n//import URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\n//import FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  { urn: `settings`, name: `Ustawienia grupy`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `materials`, name: `Materiały`, permName: `isMaster` },\r\n  { urn: `tasks`, name: `Zadania`, permName: `isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\n/*\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n*/\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  //const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  /*\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  */\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  /*\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n*/\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport { fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\nexport default class Select extends React.Component {\r\n  emptyOption = (\r\n    <option key=\"empty\" value=\"\">\r\n      {\" \"}\r\n      -- brak opcji --{\" \"}\r\n    </option>\r\n  )\r\n\r\n  state = {\r\n    options: [this.emptyOption],\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const { autoFetch } = this.props\r\n\r\n    if (autoFetch === undefined || autoFetch) this.fetch()\r\n  }\r\n\r\n  fetch = () => {\r\n    const {\r\n      fetchDataAddress,\r\n      fetchDataFilter,\r\n      fetchDataProcessor,\r\n      fetchGetDataName,\r\n      onChange,\r\n    } = this.props\r\n\r\n    fetchWithStatusProcessing(fetchDataAddress, {\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    })\r\n      .then(data => data[fetchGetDataName])\r\n      .then(arr =>\r\n        fetchDataFilter\r\n          ? arr.filter(field => this.props.fetchDataFilter(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        fetchDataProcessor\r\n          ? arr.map(field => this.props.fetchDataProcessor(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        arr.map(field =>\r\n          typeof field === `string` ? { value: field, text: field } : field\r\n        )\r\n      )\r\n      .then(arr =>\r\n        arr.map(({ value, text }) => (\r\n          <option key={value} value={value}>\r\n            {text}\r\n          </option>\r\n        ))\r\n      )\r\n      .then(options =>\r\n        options.length ? options : options.concat([this.emptyOption])\r\n      )\r\n      .then(options => this.setState({ options }))\r\n      .then(() => onChange && onChange(this.ref.current))\r\n  }\r\n\r\n  render = () => (\r\n    <select\r\n      name={this.props.name}\r\n      ref={this.ref}\r\n      onBlur={this.props.onChange}\r\n      disabled={this.props.disabled ?? false}\r\n    >\r\n      {this.state.options}\r\n    </select>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, translateRole } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\nimport Select from \"../../components/select.js\"\r\n\r\nexport default class PlatformGroups extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.platformId = query.get(`platformId`)\r\n    this.groupId = query.get(`groupId`)\r\n    this.href = `/group/it?platformId=${this.platformId}&groupId=${this.groupId}`\r\n  }\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={this.href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- użytkownicy</h1>\r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.GROUP$ID_USERS_POST.replace(\r\n          `:groupId`,\r\n          this.groupId\r\n        )}\r\n        fetchGetAddress={URLS.GROUP$ID_USERS_GET.replace(\r\n          `:groupId`,\r\n          this.groupId\r\n        )}\r\n        fetchDeleteAddress={URLS.GROUP$ID_USERS$ID_DELETE}\r\n        deleteIdParameterName=\":userId\"\r\n        responseGetDataName=\"users\"\r\n        buttonAdd=\"Dodaj do grupy\"\r\n        buttonDelete=\"Usuń z grupy\"\r\n        staticPostBodyData={{ groupId: this.groupId }}\r\n        objectsFields={[`name`, `surname`,\r\n          { name: `perms`, processor: (perm={}) => translateRole(perm.name, `Student`) },\r\n        ]}\r\n        titleFields={[`Imię`, `Nazwisko`, `Rola`]}\r\n        inputFieldsComponents={{\r\n          name: {\r\n            component: Select,\r\n            onTableFillTrigger: `fetch`,\r\n            props: {\r\n              name: `userId`,\r\n              autoFetch: false,\r\n              fetchDataAddress: URLS.PLATFORM$ID_USERS_GET.replace(\r\n                `:platformId`,\r\n                this.platformId\r\n              ),\r\n              fetchGetDataName: \"users\",\r\n              fetchDataFilter(field) {\r\n                for (const { id } of this.getTableData())\r\n                  if (field.id === id) return false\r\n\r\n                return true\r\n              },\r\n              fetchDataProcessor({ id, name, surname }) {\r\n                return { value: id, text: `${name} ${surname}` }\r\n              },\r\n            },\r\n          },\r\n          perms: {\r\n            component: Select,\r\n            props: {\r\n              name: `userId`,\r\n              disabled: true,\r\n              fetchDataAddress: URLS.GROUP$ID_PERMISSIONS_GET.replace(\r\n                `:groupId`,\r\n                this.groupId\r\n              ),\r\n              fetchGetDataName: \"permissions\",\r\n              fetchDataProcessor: ({ id, name }) => ({ value: id, text:name }),\r\n            },\r\n          },\r\n        }}\r\n        colSpans={{ name: 2 }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = (eOrName, value = null) => {\r\n    const element = eOrName.target || eOrName\r\n\r\n    this.setState({ [value ? eOrName : element.name]: value || element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    const headers = { Authentication: `Bearer ${getToken()}` }\r\n    let body = JSON.stringify({\r\n      ...fieldsData,\r\n      ...this.props.staticPostBodyData,\r\n    })\r\n\r\n    if (this.props.enctype === `multipart/form-data`) {\r\n      body = new FormData()\r\n\r\n      Object.entries({\r\n        ...fieldsData,\r\n        ...this.props.staticPostBodyData,\r\n      }).forEach(([k, v]) => {\r\n        console.log({ k, v })\r\n        body.append(k, v)\r\n      })\r\n    } else headers[\"Content-Type\"] = `application/json`\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers,\r\n      body,\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.log({ data })\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          const processor = field.processor || (x => x)\r\n          const propName = field.alt || field.name\r\n          const processorData = field.entire ? obj : obj[propName]\r\n          \r\n          fields.push(<td key={field.name}>{processor(processorData)}</td>)\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            {this.props.buttonDelete ? (\r\n              <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n                {this.props.buttonDelete}\r\n              </button>\r\n            ) : null}\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}