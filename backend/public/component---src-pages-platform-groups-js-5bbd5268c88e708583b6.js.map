{"version":3,"sources":["webpack:///./src/components/select.js","webpack:///./src/pages/platform/groups.js","webpack:///./src/components/platformLayout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["Select","emptyOption","key","value","state","options","ref","React","createRef","fetch","props","fetchDataAddress","fetchDataFilter","fetchDataProcessor","fetchGetDataName","onChange","fetchWithStatusProcessing","headers","Authentication","getToken","then","data","arr","filter","field","map","text","length","concat","setState","current","render","name","onBlur","disabled","componentDidMount","autoFetch","this","undefined","Component","PlatformGroups","className","to","platformId","fetchPostAddress","URLS","GROUP_POST","fetchGetAddress","GROUP_FROM_PLATFORM$ID_GET","replace","fetchDeleteAddress","GROUP$ID_DELETE","deleteIdParameterName","responseGetDataName","responsePostDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","processor","obj","surname","titleFields","inputFieldsComponents","lecturer","component","PLATFORM$ID_USERS_GET","id","query","urlSearchParams","get","navItems","urn","permName","groupsLisMap","title","color","linkAddress","menuLisBuilder","perms","children","url","useState","authFetch","groups","group","groupsLis","setGroupsRows","getPlatformPerms","menuLis","setMenuRows","useEffect","cb","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","error","rows","creatingLis","creationAllowed","onFillListeners","updateNewField","eOrName","element","deleteRow","method","code","success","console","old","forEach","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","enctype","FormData","entries","k","v","log","append","ERRORS","isBrowser","window","location","reload","addToTable","itemOrItems","Array","isArray","newRows","fields","x","propName","alt","processorData","entire","push","type","onClick","objectField","objectFieldName","customInputField","colSpan","colSpans","getTableData","onTableFillTrigger","Date","now","Math","random"],"mappings":"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","file":"component---src-pages-platform-groups-js-5bbd5268c88e708583b6.js","sourcesContent":["import React from \"react\"\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport { fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\nexport default class Select extends React.Component {\r\n  emptyOption = (\r\n    <option key=\"empty\" value=\"\">\r\n      {\" \"}\r\n      -- brak opcji --{\" \"}\r\n    </option>\r\n  )\r\n\r\n  state = {\r\n    options: [this.emptyOption],\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const { autoFetch } = this.props\r\n\r\n    if (autoFetch === undefined || autoFetch) this.fetch()\r\n  }\r\n\r\n  fetch = () => {\r\n    const {\r\n      fetchDataAddress,\r\n      fetchDataFilter,\r\n      fetchDataProcessor,\r\n      fetchGetDataName,\r\n      onChange,\r\n    } = this.props\r\n\r\n    fetchWithStatusProcessing(fetchDataAddress, {\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    })\r\n      .then(data => data[fetchGetDataName])\r\n      .then(arr =>\r\n        fetchDataFilter\r\n          ? arr.filter(field => this.props.fetchDataFilter(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        fetchDataProcessor\r\n          ? arr.map(field => this.props.fetchDataProcessor(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        arr.map(field =>\r\n          typeof field === `string` ? { value: field, text: field } : field\r\n        )\r\n      )\r\n      .then(arr =>\r\n        arr.map(({ value, text }) => (\r\n          <option key={value} value={value}>\r\n            {text}\r\n          </option>\r\n        ))\r\n      )\r\n      .then(options =>\r\n        options.length ? options : options.concat([this.emptyOption])\r\n      )\r\n      .then(options => this.setState({ options }))\r\n      .then(() => onChange && onChange(this.ref.current))\r\n  }\r\n\r\n  render = () => (\r\n    <select\r\n      name={this.props.name}\r\n      ref={this.ref}\r\n      onBlur={this.props.onChange}\r\n      disabled={this.props.disabled ?? false}\r\n    >\r\n      {this.state.options}\r\n    </select>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/platformLayout.js\"\r\nimport Select from \"../../components/select.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\n\r\nexport default class PlatformGroups extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.platformId = query.get(`platformId`)\r\n  }\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link\r\n        className=\"return_link\"\r\n        to={`/platform/it?platformId=${this.platformId}`}\r\n      >\r\n        Powrót do widoku platformy\r\n      </Link>\r\n\r\n      <h1>Zarządzanie grupami platformy</h1>\r\n      <p>\r\n        <strong>Ważne!</strong> Lista grup po lewej stronie zaktualizuje się\r\n        dopiero po odświeżeniu strony\r\n      </p>\r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.GROUP_POST}\r\n        fetchGetAddress={URLS.GROUP_FROM_PLATFORM$ID_GET.replace(\r\n          `:platformId`,\r\n          this.platformId\r\n        )}\r\n        fetchDeleteAddress={URLS.GROUP$ID_DELETE}\r\n        deleteIdParameterName=\":groupId\"\r\n        responseGetDataName=\"groups\"\r\n        responsePostDataName=\"group\"\r\n        buttonAdd=\"Dodaj do platformy\"\r\n        buttonDelete=\"Usuń z platformy\"\r\n        staticPostBodyData={{ platformId: this.platformId }}\r\n        objectsFields={[\r\n          `name`,\r\n          { name: `lecturer`, processor: obj => `${obj.name} ${obj.surname}` },\r\n        ]}\r\n        titleFields={[`Nazwa grupy`, `Prowadzący`]}\r\n        inputFieldsComponents={{\r\n          lecturer: {\r\n            component: Select,\r\n            props: {\r\n              name: `lecturerId`,\r\n              fetchDataAddress: URLS.PLATFORM$ID_USERS_GET.replace(\r\n                `:platformId`,\r\n                this.platformId\r\n              ),\r\n              fetchGetDataName: \"users\",\r\n              fetchDataFilter(field) {\r\n                return field\r\n              },\r\n              fetchDataProcessor({ id, name, surname }) {\r\n                return { value: id, text: `${name} ${surname}` }\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport URLS from \"../utils/urls.js\"\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport {\r\n  AuthorizedContent,\r\n  getPlatformPerms,\r\n  authFetch,\r\n} from \"../utils/auth.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst navItems = [\r\n  { urn: `settings`, name: `Ogólne`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName: `isMaster` },\r\n  { urn: `groups`, name: `Grupy`, permName: `isMaster` },\r\n]\r\n\r\nconst groupsLisMap = ({ id, name }, platformId) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={name}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/group/it?platformId=${platformId}&groupId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n\r\nconst menuLisBuilder = (perms, platformId) =>\r\n  navItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/platform/${urn}?platformId=${platformId}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n  const platformId = query.get(`platformId`)\r\n  const url = URLS.GROUP_FROM_PLATFORM$ID_GET.replace(`:platformId`, platformId)\r\n\r\n  const [groupsLis, setGroupsRows] = useState(\r\n    (authFetch({ url }) || { groups: [] }).groups.map(group =>\r\n      groupsLisMap(group, platformId)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getPlatformPerms(platformId) || {}, platformId)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ groups }) =>\r\n        setGroupsRows(groups.map(group => groupsLisMap(group, platformId))),\r\n    })\r\n  }, [url, platformId])\r\n\r\n  useEffect(() => {\r\n    getPlatformPerms(platformId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformId))\r\n    })\r\n  }, [platformId])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Grupy</h2>\r\n          <ul className=\"list\">\r\n            {groupsLis.length ? groupsLis : \"Nie należysz do żadnej grupy\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = (eOrName, value = null) => {\r\n    const element = eOrName.target || eOrName\r\n\r\n    this.setState({ [value ? eOrName : element.name]: value || element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    const headers = { Authentication: `Bearer ${getToken()}` }\r\n    let body = JSON.stringify({\r\n      ...fieldsData,\r\n      ...this.props.staticPostBodyData,\r\n    })\r\n\r\n    if (this.props.enctype === `multipart/form-data`) {\r\n      body = new FormData()\r\n\r\n      Object.entries({\r\n        ...fieldsData,\r\n        ...this.props.staticPostBodyData,\r\n      }).forEach(([k, v]) => {\r\n        console.log({ k, v })\r\n        body.append(k, v)\r\n      })\r\n    } else headers[\"Content-Type\"] = `application/json`\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers,\r\n      body,\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.log({ data })\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          const processor = field.processor || (x => x)\r\n          const propName = field.alt || field.name\r\n          const processorData = field.entire ? obj : obj[propName]\r\n          \r\n          fields.push(<td key={field.name}>{processor(processorData)}</td>)\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            {this.props.buttonDelete ? (\r\n              <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n                {this.props.buttonDelete}\r\n              </button>\r\n            ) : null}\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}