{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./src/pages/group/tasks.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["menyItems","urn","name","permName","menuLisBuilder","perms","platformAndGroupQuery","filter","map","key","className","to","children","query","urlSearchParams","platformId","get","groupId","useState","getGroupPerms","menuLis","setMenuRows","useEffect","length","DateInput","render","type","onChange","target","props","value","React","Component","PlatformGroups","href","fetchPostAddress","URLS","GROUPS$ID_TASKS_POST","replace","fetchGetAddress","GROUPS$ID_TASKS_GET","fetchDeleteAddress","GROUPS$ID_TASKS_DELETE","deleteIdParameterName","responseGetDataName","responsePostDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","processor","dateTime","getDate","titleFields","inputFieldsComponents","created","component","expire","_objectWithoutPropertiesLoose","source","excluded","i","sourceKeys","Object","keys","indexOf","TableForm","state","error","rows","data","creatingLis","creationAllowed","onFillListeners","updateNewField","eOrName","element","setState","deleteRow","id","fetchWithStatusProcessing","method","headers","Authentication","getToken","then","code","success","console","old","forEach","ref","field","current","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","enctype","FormData","entries","k","v","log","append","ERRORS","isBrowser","window","location","reload","addToTable","itemOrItems","Array","isArray","newRows","obj","fields","x","propName","alt","processorData","entire","push","onClick","objectField","objectFieldName","customInputField","colSpan","colSpans","createRef","getTableData","onTableFillTrigger","Date","now","Math","random","disabled","componentDidMount","this"],"mappings":"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","file":"component---src-pages-group-tasks-js-b95989d9e2ab27bed7c7.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, getGroupPerms } from \"../utils/auth.js\"\r\n//import URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\n//import FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `materials`, name: `Materiały`, permName: `isMaster` },\r\n  { urn: `tasks`, name: `Zadania`, permName: `isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\n/*\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n*/\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  //const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  /*\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  */\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  /*\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n*/\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\n\r\n\r\n\r\nclass DateInput extends React.Component{\r\n  \r\n  render = () => <input \r\n    type=\"datetime-local\"  \r\n    onChange={({ target }) => this.props.onChange(target.name, target.value)}\r\n    />\r\n}\r\n\r\n\r\n//const DateInput = props => <input type=\"datetime-local\" {...props} />\r\n\r\n\r\n/*\r\nclass FileInput extends React.Component {\r\n    render = () => <input\r\n      type=\"file\"\r\n      name={this.props.name}\r\n      onChange={({ target }) => this.props.onChange( target.name, target.files[ 0 ] )}\r\n    />\r\n  }\r\n*/\r\n\r\nexport default class PlatformGroups extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.groupId = query.get(`groupId`)\r\n    this.platformId = query.get(`platformId`)\r\n\r\n    this.href = `/group/it?platformId=${this.platformId}&groupId=${this.groupId}`\r\n  }\r\n\r\n\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={this.href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- dodawanie zadań przez prowadzącego</h1>\r\n      \r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.GROUPS$ID_TASKS_POST.replace(`:groupId`, this.groupId)}\r\n        fetchGetAddress={URLS.GROUPS$ID_TASKS_GET.replace(`:groupId`,this.groupId)}\r\n        fetchDeleteAddress={URLS.GROUPS$ID_TASKS_DELETE}\r\n        deleteIdParameterName=\":taskId\"\r\n        responseGetDataName=\"tasks\"\r\n        responsePostDataName=\"task\"\r\n        buttonAdd=\"Dodaj zadanie\"\r\n        buttonDelete=\"Usuń zadanie\"\r\n        staticPostBodyData={{\r\n          groupId: this.groupId,\r\n          platformId: this.platformId,\r\n        }}\r\n        objectsFields={[\r\n          {\r\n            name: `created`,\r\n            processor: dateTime => getDate(`YYYY:MM:DD hh:mm`, dateTime),\r\n          },\r\n          {\r\n            name: `expire`,\r\n            processor: dateTime => getDate(`YYYY:MM:DD hh:mm`, dateTime),\r\n          },\r\n          `title`,\r\n          `description`,\r\n        ]}\r\n        titleFields={[\r\n          `Data rozpoczęcia`,\r\n          `Data zakończenia`,\r\n          `Nazwa`,\r\n          `Opis`,\r\n          \r\n        ]}\r\n        inputFieldsComponents={{\r\n          created: { component: DateInput },\r\n          expire: { component: DateInput },\r\n        \r\n        }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = (eOrName, value = null) => {\r\n    const element = eOrName.target || eOrName\r\n\r\n    this.setState({ [value ? eOrName : element.name]: value || element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    const headers = { Authentication: `Bearer ${getToken()}` }\r\n    let body = JSON.stringify({\r\n      ...fieldsData,\r\n      ...this.props.staticPostBodyData,\r\n    })\r\n\r\n    if (this.props.enctype === `multipart/form-data`) {\r\n      body = new FormData()\r\n\r\n      Object.entries({\r\n        ...fieldsData,\r\n        ...this.props.staticPostBodyData,\r\n      }).forEach(([k, v]) => {\r\n        console.log({ k, v })\r\n        body.append(k, v)\r\n      })\r\n    } else headers[\"Content-Type\"] = `application/json`\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers,\r\n      body,\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.log({ data })\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          const processor = field.processor || (x => x)\r\n          const propName = field.alt || field.name\r\n          const processorData = field.entire ? obj : obj[propName]\r\n          \r\n          fields.push(<td key={field.name}>{processor(processorData)}</td>)\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            {this.props.buttonDelete ? (\r\n              <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n                {this.props.buttonDelete}\r\n              </button>\r\n            ) : null}\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}