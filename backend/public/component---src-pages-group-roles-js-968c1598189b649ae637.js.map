{"version":3,"sources":["webpack:///./src/pages/group/roles.js","webpack:///./src/components/groupLayout.js"],"names":["query","urlSearchParams","href","get","className","to","menyItems","urn","name","permName","menuLisBuilder","perms","platformAndGroupQuery","filter","map","key","children","platformId","groupId","useState","getGroupPerms","menuLis","setMenuRows","useEffect","length"],"mappings":"8FAAA,oEASe,qBACb,IAAMA,EAAQC,cACRC,EAAI,wBAA2BF,EAAMG,IACzC,cADQ,YAEGH,EAAMG,IAAI,WAEvB,OACE,kBAAC,IAAD,CAAQC,UAAU,eAChB,kBAAC,OAAD,CAAMA,UAAU,cAAcC,GAAIH,GAAlC,0BAIA,gD,oCCrBN,yEAWMI,EAAY,CAChB,CAAEC,IAAI,WAAaC,KAAK,mBAAqBC,SAAS,YACtD,CAAEF,IAAI,QAAUC,KAAK,QAAUC,SAAS,YACxC,CAAEF,IAAI,QAAUC,KAAK,cAAgBC,SAAS,YAE9C,CAAEF,IAAI,YAAcC,KAAK,YAAcC,SAAS,YAChD,CAAEF,IAAI,QAAUC,KAAK,UAAYC,SAAS,YAC1C,CAAEF,IAAI,QAAUC,KAAK,YAAcC,SAAS,aAexCC,EAAiB,SAACC,EAAOC,GAAR,OACrBN,EACGO,QAAO,gBAAGJ,EAAH,EAAGA,SAAH,OAAmBA,GAAYE,EAAMF,MAC5CK,KAAI,gBAAGP,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OACH,wBAAIO,IAAKR,EAAKH,UAAU,aACtB,kBAAC,OAAD,CAAMC,GAAE,UAAYE,EAAZ,IAAmBK,GAA0BJ,QAI9C,gBAAmC,IAAhCQ,EAA+B,EAA/BA,SAA+B,IAArBZ,iBAAqB,WACzCJ,EAAQC,cAERgB,EAAajB,EAAMG,IAAN,cACbe,EAAUlB,EAAMG,IAAN,WACVS,EAAqB,cAAiBK,EAAjB,YAAuCC,EALnB,EAehBC,mBAC7BT,EAAeU,YAAcF,IAAY,GAAIN,IADxCS,EAfwC,KAe/BC,EAf+B,KAoC/C,OANAC,qBAAU,WACRH,YAAcF,GAAS,SAAAP,GACrBW,EAAYZ,EAAeC,GAAS,GAAIC,SAEzC,CAACM,EAASN,IAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQR,UAAU,wBAChB,yBAAKA,UAAU,oCACZiB,EAAQG,OACP,oCACE,8CACA,wBAAIpB,UAAU,QAAQiB,GACtB,8BAEA,MAGN,6BAASjB,UAAS,qCAAuCA,GACtDY","file":"component---src-pages-group-roles-js-968c1598189b649ae637.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../../utils/functions.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\n\r\n// import classes from \"./group.module.css\"\r\n\r\nexport default () => {\r\n  const query = urlSearchParams()\r\n  const href = `/group/it?platformId=${query.get(\r\n    \"platformId\"\r\n  )}&groupId=${query.get(\"groupId\")}`\r\n\r\n  return (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- role</h1>\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, getGroupPerms } from \"../utils/auth.js\"\r\n//import URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\n//import FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  { urn: `settings`, name: `Ustawienia grupy`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `materials`, name: `Materiały`, permName: `isMaster` },\r\n  { urn: `tasks`, name: `Zadania`, permName: `isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\n/*\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\n*/\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  //const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  /*\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  */\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  /*\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n*/\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n"],"sourceRoot":""}