{"version":3,"sources":["webpack:///./src/pages/group/notes.js","webpack:///./src/components/groupLayout.js","webpack:///./src/components/select.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["query","urlSearchParams","groupId","get","href","className","to","fetchPostAddress","URLS","GROUP$ID_NOTES_POST","replace","fetchGetAddress","GROUP$ID_NOTES_GET","fetchDeleteAddress","GROUP_NOTES$ID_DELETE","deleteIdParameterName","responseGetDataName","responsePostDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","name","processor","obj","surname","titleFields","inputFieldsComponents","user","component","Select","props","fetchDataAddress","GROUP$ID_USERS_GET","fetchGetDataName","fetchDataProcessor","value","id","text","colSpans","menyItems","urn","permName","meetsLisMap","platformAndGroupQuery","dateStart","description","key","title","getDate","color","linkAddress","menuLisBuilder","perms","filter","map","children","platformId","url","MEET_FROM_GROUP$ID_GET","useState","authFetch","meets","meet","meetsLis","setMeetsRows","getGroupPerms","menuLis","setMenuRows","useEffect","cb","length","emptyOption","state","options","ref","React","createRef","fetch","fetchDataFilter","onChange","fetchWithStatusProcessing","headers","Authentication","getToken","then","data","arr","field","concat","setState","current","render","onBlur","disabled","componentDidMount","autoFetch","this","undefined","Component","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","error","rows","creatingLis","creationAllowed","onFillListeners","updateNewField","e","element","deleteRow","method","code","success","console","old","forEach","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","ERRORS","isBrowser","window","location","reload","addToTable","itemOrItems","Array","isArray","newRows","fields","push","type","onClick","objectField","objectFieldName","customInputField","colSpan","getTableData","onTableFillTrigger","Date","now","Math","random"],"mappings":"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","file":"component---src-pages-group-notes-js-d9f6d53b936114339182.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\nimport Select from \"../../components/select.js\"\r\n\r\n// import classes from \"./group.module.css\"\r\n\r\nexport default () => {\r\n  const query = urlSearchParams()\r\n\r\n  // const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const href = `/group/it?platformId=${query.get(\r\n    \"platformId\"\r\n  )}&groupId=${groupId}`\r\n\r\n  return (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- Oceny</h1>\r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.GROUP$ID_NOTES_POST.replace(`:groupId`, groupId)}\r\n        fetchGetAddress={URLS.GROUP$ID_NOTES_GET.replace(`:groupId`, groupId)}\r\n        fetchDeleteAddress={URLS.GROUP_NOTES$ID_DELETE}\r\n        deleteIdParameterName=\":noteId\"\r\n        responseGetDataName=\"notes\"\r\n        responsePostDataName=\"note\"\r\n        buttonAdd=\"Dodaj ocenę\"\r\n        buttonDelete=\"Usuń ocenę\"\r\n        staticPostBodyData={{}}\r\n        objectsFields={[\r\n          `value`,\r\n          `description`,\r\n          { name: `user`, processor: obj => `${obj.name} ${obj.surname}` },\r\n        ]}\r\n        titleFields={[`Wartość całkowita`, `Opis`, `Student`]}\r\n        inputFieldsComponents={{\r\n          user: {\r\n            component: Select,\r\n            props: {\r\n              name: `userId`,\r\n              fetchDataAddress: URLS.GROUP$ID_USERS_GET.replace(\r\n                `:groupId`,\r\n                groupId\r\n              ),\r\n              fetchGetDataName: \"users\",\r\n              fetchDataProcessor({ id, name, surname }) {\r\n                return { value: id, text: `${name} ${surname}` }\r\n              },\r\n            },\r\n          },\r\n        }}\r\n        colSpans={{ name: 2 }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, authFetch, getGroupPerms } from \"../utils/auth.js\"\r\nimport URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Spotkania</h2>\r\n          <ul className=\"list\">\r\n            {meetsLis.length ? meetsLis : \"Nie należysz do żadnego spotkania\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport { fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\nexport default class Select extends React.Component {\r\n  emptyOption = (\r\n    <option key=\"empty\" value=\"\">\r\n      {\" \"}\r\n      -- brak opcji --{\" \"}\r\n    </option>\r\n  )\r\n\r\n  state = {\r\n    options: [this.emptyOption],\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const { autoFetch } = this.props\r\n\r\n    if (autoFetch === undefined || autoFetch) this.fetch()\r\n  }\r\n\r\n  fetch = () => {\r\n    const {\r\n      fetchDataAddress,\r\n      fetchDataFilter,\r\n      fetchDataProcessor,\r\n      fetchGetDataName,\r\n      onChange,\r\n    } = this.props\r\n\r\n    fetchWithStatusProcessing(fetchDataAddress, {\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    })\r\n      .then(data => data[fetchGetDataName])\r\n      .then(arr =>\r\n        fetchDataFilter\r\n          ? arr.filter(field => this.props.fetchDataFilter(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        fetchDataProcessor\r\n          ? arr.map(field => this.props.fetchDataProcessor(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        arr.map(field =>\r\n          typeof field === `string` ? { value: field, text: field } : field\r\n        )\r\n      )\r\n      .then(arr =>\r\n        arr.map(({ value, text }) => (\r\n          <option key={value} value={value}>\r\n            {text}\r\n          </option>\r\n        ))\r\n      )\r\n      .then(options =>\r\n        options.length ? options : options.concat([this.emptyOption])\r\n      )\r\n      .then(options => this.setState({ options }))\r\n      .then(() => onChange && onChange(this.ref.current))\r\n  }\r\n\r\n  render = () => (\r\n    <select\r\n      name={this.props.name}\r\n      ref={this.ref}\r\n      onBlur={this.props.onChange}\r\n      disabled={this.props.disabled ?? false}\r\n    >\r\n      {this.state.options}\r\n    </select>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = e => {\r\n    const element = e.target || e\r\n\r\n    this.setState({ [element.name]: element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers: {\r\n        Authentication: `Bearer ${getToken()}`,\r\n        \"Content-Type\": `application/json`,\r\n      },\r\n      body: JSON.stringify({ ...fieldsData, ...this.props.staticPostBodyData }),\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          fields.push(\r\n            <td key={field.name}>{field.processor(obj[field.name])}</td>\r\n          )\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n              {this.props.buttonDelete}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string.isRequired,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string.isRequired,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}