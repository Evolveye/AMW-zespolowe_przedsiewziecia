{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js","webpack:///./src/pages/group/meets.js"],"names":["menyItems","urn","name","permName","meetsLisMap","platformAndGroupQuery","id","dateStart","description","key","title","getDate","color","linkAddress","menuLisBuilder","perms","filter","map","className","to","children","query","urlSearchParams","platformId","get","groupId","url","URLS","MEET_FROM_GROUP$ID_GET","replace","useState","authFetch","meets","meet","meetsLis","setMeetsRows","getGroupPerms","menuLis","setMenuRows","useEffect","cb","length","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","state","error","rows","data","creatingLis","creationAllowed","onFillListeners","updateNewField","e","element","setState","value","deleteRow","fetchWithStatusProcessing","props","fetchDeleteAddress","deleteIdParameterName","method","headers","Authentication","getToken","then","code","success","console","old","forEach","ref","field","current","info","sendCreationData","fieldsData","setCreatingElements","fetchPostAddress","body","JSON","stringify","staticPostBodyData","ERRORS","isBrowser","window","location","reload","responsePostDataName","addToTable","itemOrItems","Array","isArray","newRows","obj","fields","objectsFields","push","processor","type","onClick","buttonDelete","objectField","objectFieldName","customInputField","inputFieldsComponents","colSpan","colSpans","onChange","component","React","createRef","getTableData","onTableFillTrigger","Date","now","Math","random","render","titleFields","disabled","buttonAdd","componentDidMount","this","fetchGetAddress","responseGetDataName","Component","DateInput","PlatformGroups","href","MEET_POST","MEET$ID_DELETE","dateTime","rel","dateEnd"],"mappings":"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","file":"component---src-pages-group-meets-js-725f47a8cec9d83c88b9.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, authFetch, getGroupPerms } from \"../utils/auth.js\"\r\nimport URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Spotkania</h2>\r\n          <ul className=\"list\">\r\n            {meetsLis.length ? meetsLis : \"Nie należysz do żadnego spotkania\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = e => {\r\n    const element = e.target || e\r\n\r\n    this.setState({ [element.name]: element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers: {\r\n        Authentication: `Bearer ${getToken()}`,\r\n        \"Content-Type\": `application/json`,\r\n      },\r\n      body: JSON.stringify({ ...fieldsData, ...this.props.staticPostBodyData }),\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          fields.push(\r\n            <td key={field.name}>{field.processor(obj[field.name])}</td>\r\n          )\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n              {this.props.buttonDelete}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string.isRequired,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string.isRequired,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\n\r\nconst DateInput = props => <input type=\"datetime-local\" {...props} />\r\n\r\nexport default class PlatformGroups extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.groupId = query.get(`groupId`)\r\n    this.platformId = query.get(`platformId`)\r\n\r\n    this.href = `/group/it?platformId=${this.platformId}&groupId=${this.groupId}`\r\n  }\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={this.href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- spotkania</h1>\r\n      <p>\r\n        <strong>Ważne!</strong> Lista spotkań po lewej stronie zaktualizuje się\r\n        dopiero po odświeżeniu strony\r\n      </p>\r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.MEET_POST}\r\n        fetchGetAddress={URLS.MEET_FROM_GROUP$ID_GET.replace(\r\n          `:groupId`,\r\n          this.groupId\r\n        ).replace(`:platformId`, this.platformId)}\r\n        fetchDeleteAddress={URLS.MEET$ID_DELETE}\r\n        deleteIdParameterName=\":meetId\"\r\n        responseGetDataName=\"meets\"\r\n        responsePostDataName=\"meet\"\r\n        buttonAdd=\"Dodaj do grupy\"\r\n        buttonDelete=\"Usuń z grupy\"\r\n        staticPostBodyData={{\r\n          groupId: this.groupId,\r\n          platformId: this.platformId,\r\n        }}\r\n        objectsFields={[\r\n          {\r\n            name: `dateStart`,\r\n            processor: dateTime => getDate(`YYYY:MM:DD hh:mm`, dateTime),\r\n          },\r\n          {\r\n            name: `dateEnd`,\r\n            processor: dateTime => getDate(`YYYY:MM:DD hh:mm`, dateTime),\r\n          },\r\n          `description`,\r\n          {\r\n            name: `externalUrl`,\r\n            processor: url => <a href={url} target=\"_blank\" rel=\"noreferrer\">Link do spotkania</a>,\r\n          },\r\n        ]}\r\n        titleFields={[\r\n          `Data rozpoczęcia`,\r\n          `Data zakończenia`,\r\n          `Opis`,\r\n          `Link do spotkania`,\r\n        ]}\r\n        inputFieldsComponents={{\r\n          dateStart: { component: DateInput },\r\n          dateEnd: { component: DateInput },\r\n        }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n"],"sourceRoot":""}