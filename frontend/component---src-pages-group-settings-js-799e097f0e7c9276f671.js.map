{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./src/pages/group/settings.js"],"names":["menyItems","urn","name","permName","meetsLisMap","platformAndGroupQuery","id","dateStart","description","key","title","getDate","color","linkAddress","menuLisBuilder","perms","filter","map","className","to","children","query","urlSearchParams","platformId","get","groupId","url","URLS","MEET_FROM_GROUP$ID_GET","replace","useState","authFetch","meets","meet","meetsLis","setMeetsRows","getGroupPerms","menuLis","setMenuRows","useEffect","cb","length","href"],"mappings":"8FAAA,iGAWMA,EAAY,CAEhB,CAAEC,IAAI,QAAUC,KAAK,QAAUC,SAAS,YACxC,CAAEF,IAAI,QAAUC,KAAK,cAAgBC,SAAS,YAE9C,CAAEF,IAAI,QAAUC,KAAK,YAAcC,SAAS,aAGxCC,EAAc,SAAC,EAAgCC,GAAjC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,YAAlB,OAClB,wBAAIC,IAAKH,GACP,kBAAC,IAAD,CACEI,MAAOC,YAAQ,qBAAsBJ,GACrCC,YAAaA,EACbI,MAAK,UACLC,YAAW,YAAcR,EAAd,WAA8CC,MAIzDQ,EAAiB,SAACC,EAAOV,GAAR,OACrBL,EACGgB,QAAO,gBAAGb,EAAH,EAAGA,SAAH,OAAmBA,GAAYY,EAAMZ,MAC5Cc,KAAI,gBAAGhB,EAAH,EAAGA,IAAKC,EAAR,EAAQA,KAAR,OACH,wBAAIO,IAAKR,EAAKiB,UAAU,aACtB,kBAAC,OAAD,CAAMC,GAAE,UAAYlB,EAAZ,IAAmBI,GAA0BH,QAI9C,gBAAmC,IAAhCkB,EAA+B,EAA/BA,SAA+B,IAArBF,iBAAqB,WACzCG,EAAQC,cAERC,EAAaF,EAAMG,IAAN,cACbC,EAAUJ,EAAMG,IAAN,WACVnB,EAAqB,cAAiBkB,EAAjB,YAAuCE,EAC5DC,EAAMC,IAAKC,uBAAuBC,QAA5B,WAAgDJ,GANb,EAQdK,oBAC9BC,YAAU,CAAEL,SAAU,CAAEM,MAAO,KAAMA,MAAMf,KAAI,SAAAgB,GAAI,OAClD7B,EAAY6B,EAAM5B,OAFf6B,EARwC,KAQ9BC,EAR8B,OAahBL,mBAC7BhB,EAAesB,YAAcX,IAAY,GAAIpB,IADxCgC,EAbwC,KAa/BC,EAb+B,KAiC/C,OAhBAC,qBAAU,WACRR,YAAU,CACRL,MACAc,GAAI,gBAAGR,EAAH,EAAGA,MAAH,OACFG,EACEH,EAAMf,KAAI,SAAAgB,GAAI,OAAI7B,EAAY6B,EAAM5B,YAGzC,CAACqB,EAAKrB,IAETkC,qBAAU,WACRH,YAAcX,GAAS,SAAAV,GACrBuB,EAAYxB,EAAeC,GAAS,GAAIV,SAEzC,CAACoB,EAASpB,IAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQa,UAAU,wBAChB,yBAAKA,UAAU,oCACZmB,EAAQI,OACP,oCACE,8CACA,wBAAIvB,UAAU,QAAQmB,GACtB,8BAEA,KAEJ,yCACA,wBAAInB,UAAU,QACXgB,EAASO,OAASP,EAAW,sCAIlC,6BAAShB,UAAS,qCAAuCA,GACtDE,O,kCC1FX,oEASe,qBACb,IAAMC,EAAQC,cACRoB,EAAI,wBAA2BrB,EAAMG,IACzC,cADQ,YAEGH,EAAMG,IAAI,WAEvB,OACE,kBAAC,IAAD,CAAQN,UAAU,eAChB,kBAAC,OAAD,CAAMA,UAAU,cAAcC,GAAIuB,GAAlC,0BAIA","file":"component---src-pages-group-settings-js-799e097f0e7c9276f671.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, authFetch, getGroupPerms } from \"../utils/auth.js\"\r\nimport URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Spotkania</h2>\r\n          <ul className=\"list\">\r\n            {meetsLis.length ? meetsLis : \"Nie należysz do żadnego spotkania\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams } from \"../../utils/functions.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\n\r\n// import classes from \"./group.module.css\"\r\n\r\nexport default () => {\r\n  const query = urlSearchParams()\r\n  const href = `/group/it?platformId=${query.get(\r\n    \"platformId\"\r\n  )}&groupId=${query.get(\"groupId\")}`\r\n\r\n  return (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- ustawienia ogólne</h1>\r\n    </Layout>\r\n  )\r\n}\r\n"],"sourceRoot":""}