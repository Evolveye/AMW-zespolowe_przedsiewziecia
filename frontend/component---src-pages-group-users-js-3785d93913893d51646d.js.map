{"version":3,"sources":["webpack:///./src/components/groupLayout.js","webpack:///./src/components/select.js","webpack:///./src/pages/group/users.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/tableForm.js"],"names":["menyItems","urn","name","permName","meetsLisMap","platformAndGroupQuery","id","dateStart","description","key","title","getDate","color","linkAddress","menuLisBuilder","perms","filter","map","className","to","children","query","urlSearchParams","platformId","get","groupId","url","URLS","MEET_FROM_GROUP$ID_GET","replace","useState","authFetch","meets","meet","meetsLis","setMeetsRows","getGroupPerms","menuLis","setMenuRows","useEffect","cb","length","Select","emptyOption","value","state","options","ref","React","createRef","fetch","props","fetchDataAddress","fetchDataFilter","fetchDataProcessor","fetchGetDataName","onChange","fetchWithStatusProcessing","headers","Authentication","getToken","then","data","arr","field","text","concat","setState","current","render","onBlur","disabled","componentDidMount","autoFetch","this","undefined","Component","PlatformGroups","href","fetchPostAddress","GROUP$ID_USERS_POST","fetchGetAddress","GROUP$ID_USERS_GET","fetchDeleteAddress","GROUP$ID_USERS$ID_DELETE","deleteIdParameterName","responseGetDataName","buttonAdd","buttonDelete","staticPostBodyData","objectsFields","processor","translateRole","titleFields","inputFieldsComponents","component","onTableFillTrigger","PLATFORM$ID_USERS_GET","getTableData","surname","GROUP$ID_PERMISSIONS_GET","colSpans","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf","TableForm","error","rows","creatingLis","creationAllowed","onFillListeners","updateNewField","e","element","deleteRow","method","code","success","console","old","forEach","info","sendCreationData","fieldsData","setCreatingElements","body","JSON","stringify","ERRORS","isBrowser","window","location","reload","responsePostDataName","addToTable","itemOrItems","Array","isArray","newRows","obj","fields","push","type","onClick","objectField","objectFieldName","customInputField","colSpan","Date","now","Math","random"],"mappings":"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","file":"component---src-pages-group-users-js-3785d93913893d51646d.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, getDate } from \"../utils/functions.js\"\r\nimport { AuthorizedContent, authFetch, getGroupPerms } from \"../utils/auth.js\"\r\nimport URLS from \"../utils/urls.js\"\r\n\r\nimport Layout from \"./layout.js\"\r\n\r\nimport FlatTile from \"../models/flatTile.js\"\r\n\r\nconst menyItems = [\r\n  // { urn: `settings`, name: `Ustawienia ogólne`, permName:`isMaster` },\r\n  { urn: `notes`, name: `Oceny`, permName: `isMaster` },\r\n  { urn: `users`, name: `Użytkownicy`, permName: `isMaster` },\r\n  // { urn: `roles`, name: `Role`, permName:`isMaster` },\r\n  { urn: `meets`, name: `Spotkania`, permName: `isMaster` },\r\n]\r\n\r\nconst meetsLisMap = ({ id, dateStart, description }, platformAndGroupQuery) => (\r\n  <li key={id}>\r\n    <FlatTile\r\n      title={getDate(`YYYY.MM.DD - hh:mm`, dateStart)}\r\n      description={description}\r\n      color={`#3e8bff`}\r\n      linkAddress={`/meet/it?${platformAndGroupQuery}&meetId=${id}`}\r\n    />\r\n  </li>\r\n)\r\nconst menuLisBuilder = (perms, platformAndGroupQuery) =>\r\n  menyItems\r\n    .filter(({ permName }) => !permName || perms[permName])\r\n    .map(({ urn, name }) => (\r\n      <li key={urn} className=\"list-item\">\r\n        <Link to={`/group/${urn}?${platformAndGroupQuery}`}>{name}</Link>\r\n      </li>\r\n    ))\r\n\r\nexport default ({ children, className = `` }) => {\r\n  const query = urlSearchParams()\r\n\r\n  const platformId = query.get(`platformId`)\r\n  const groupId = query.get(`groupId`)\r\n  const platformAndGroupQuery = `platformId=${platformId}&groupId=${groupId}`\r\n  const url = URLS.MEET_FROM_GROUP$ID_GET.replace(`:groupId`, groupId)\r\n\r\n  const [meetsLis, setMeetsRows] = useState(\r\n    (authFetch({ url }) || { meets: [] }).meets.map(meet =>\r\n      meetsLisMap(meet, platformAndGroupQuery)\r\n    )\r\n  )\r\n  const [menuLis, setMenuRows] = useState(\r\n    menuLisBuilder(getGroupPerms(groupId) || {}, platformAndGroupQuery)\r\n  )\r\n\r\n  useEffect(() => {\r\n    authFetch({\r\n      url,\r\n      cb: ({ meets }) =>\r\n        setMeetsRows(\r\n          meets.map(meet => meetsLisMap(meet, platformAndGroupQuery))\r\n        ),\r\n    })\r\n  }, [url, platformAndGroupQuery])\r\n\r\n  useEffect(() => {\r\n    getGroupPerms(groupId, perms => {\r\n      setMenuRows(menuLisBuilder(perms || {}, platformAndGroupQuery))\r\n    })\r\n  }, [groupId, platformAndGroupQuery])\r\n\r\n  return (\r\n    <AuthorizedContent>\r\n      <Layout className=\"main_wrapper-splited\">\r\n        <nav className=\"main_wrapper-splited-left_column\">\r\n          {menuLis.length ? (\r\n            <>\r\n              <h2>Panel ustawień</h2>\r\n              <ul className=\"list\">{menuLis}</ul>\r\n              <hr />\r\n            </>\r\n          ) : null}\r\n\r\n          <h2>Spotkania</h2>\r\n          <ul className=\"list\">\r\n            {meetsLis.length ? meetsLis : \"Nie należysz do żadnego spotkania\"}\r\n          </ul>\r\n        </nav>\r\n\r\n        <article className={`main_wrapper-splited-right_column ${className}`}>\r\n          {children}\r\n        </article>\r\n      </Layout>\r\n    </AuthorizedContent>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport { fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\nexport default class Select extends React.Component {\r\n  emptyOption = (\r\n    <option key=\"empty\" value=\"\">\r\n      {\" \"}\r\n      -- brak opcji --{\" \"}\r\n    </option>\r\n  )\r\n\r\n  state = {\r\n    options: [this.emptyOption],\r\n  }\r\n\r\n  ref = React.createRef()\r\n\r\n  componentDidMount() {\r\n    const { autoFetch } = this.props\r\n\r\n    if (autoFetch === undefined || autoFetch) this.fetch()\r\n  }\r\n\r\n  fetch = () => {\r\n    const {\r\n      fetchDataAddress,\r\n      fetchDataFilter,\r\n      fetchDataProcessor,\r\n      fetchGetDataName,\r\n      onChange,\r\n    } = this.props\r\n\r\n    fetchWithStatusProcessing(fetchDataAddress, {\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    })\r\n      .then(data => data[fetchGetDataName])\r\n      .then(arr =>\r\n        fetchDataFilter\r\n          ? arr.filter(field => this.props.fetchDataFilter(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        fetchDataProcessor\r\n          ? arr.map(field => this.props.fetchDataProcessor(field))\r\n          : arr\r\n      )\r\n      .then(arr =>\r\n        arr.map(field =>\r\n          typeof field === `string` ? { value: field, text: field } : field\r\n        )\r\n      )\r\n      .then(arr =>\r\n        arr.map(({ value, text }) => (\r\n          <option key={value} value={value}>\r\n            {text}\r\n          </option>\r\n        ))\r\n      )\r\n      .then(options =>\r\n        options.length ? options : options.concat([this.emptyOption])\r\n      )\r\n      .then(options => this.setState({ options }))\r\n      .then(() => onChange && onChange(this.ref.current))\r\n  }\r\n\r\n  render = () => (\r\n    <select\r\n      name={this.props.name}\r\n      ref={this.ref}\r\n      onBlur={this.props.onChange}\r\n      disabled={this.props.disabled ?? false}\r\n    >\r\n      {this.state.options}\r\n    </select>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { urlSearchParams, translateRole } from \"../../utils/functions.js\"\r\nimport URLS from \"../../utils/urls.js\"\r\n\r\nimport Layout from \"../../components/groupLayout.js\"\r\nimport TableForm from \"../../components/tableForm.js\"\r\nimport Select from \"../../components/select.js\"\r\n\r\nexport default class PlatformGroups extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const query = urlSearchParams()\r\n\r\n    this.platformId = query.get(`platformId`)\r\n    this.groupId = query.get(`groupId`)\r\n    this.href = `/group/it?platformId=${this.platformId}&groupId=${this.groupId}`\r\n  }\r\n\r\n  render = () => (\r\n    <Layout className=\"is-centered\">\r\n      <Link className=\"return_link\" to={this.href}>\r\n        Powrót do widoku grupy\r\n      </Link>\r\n\r\n      <h1>Grupa -- użytkownicy</h1>\r\n\r\n      <TableForm\r\n        fetchPostAddress={URLS.GROUP$ID_USERS_POST.replace(\r\n          `:groupId`,\r\n          this.groupId\r\n        )}\r\n        fetchGetAddress={URLS.GROUP$ID_USERS_GET.replace(\r\n          `:groupId`,\r\n          this.groupId\r\n        )}\r\n        fetchDeleteAddress={URLS.GROUP$ID_USERS$ID_DELETE}\r\n        deleteIdParameterName=\":userId\"\r\n        responseGetDataName=\"users\"\r\n        buttonAdd=\"Dodaj do grupy\"\r\n        buttonDelete=\"Usuń z grupy\"\r\n        staticPostBodyData={{ groupId: this.groupId }}\r\n        objectsFields={[`name`, `surname`,\r\n          { name: `perms`, processor: ({ name }) => translateRole( name ) },\r\n        ]}\r\n        titleFields={[`Imię`, `Nazwisko`, `Rola`]}\r\n        inputFieldsComponents={{\r\n          name: {\r\n            component: Select,\r\n            onTableFillTrigger: `fetch`,\r\n            props: {\r\n              name: `userId`,\r\n              autoFetch: false,\r\n              fetchDataAddress: URLS.PLATFORM$ID_USERS_GET.replace(\r\n                `:platformId`,\r\n                this.platformId\r\n              ),\r\n              fetchGetDataName: \"users\",\r\n              fetchDataFilter(field) {\r\n                for (const { id } of this.getTableData())\r\n                  if (field.id === id) return false\r\n\r\n                return true\r\n              },\r\n              fetchDataProcessor({ id, name, surname }) {\r\n                return { value: id, text: `${name} ${surname}` }\r\n              },\r\n            },\r\n          },\r\n          perms: {\r\n            component: Select,\r\n            props: {\r\n              name: `userId`,\r\n              disabled: true,\r\n              fetchDataAddress: URLS.GROUP$ID_PERMISSIONS_GET.replace(\r\n                `:groupId`,\r\n                this.groupId\r\n              ),\r\n              fetchGetDataName: \"permissions\",\r\n              fetchDataProcessor: ({ id, name }) => ({ value: id, text:name }),\r\n            },\r\n          },\r\n        }}\r\n        colSpans={{ name: 2 }}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { getToken } from \"../utils/auth.js\"\r\nimport ERRORS from \"../utils/errorList.js\"\r\nimport { isBrowser, fetchWithStatusProcessing } from \"../utils/functions.js\"\r\n\r\n// TODO cały komponent do przerobienia\r\nexport default class TableForm extends React.Component {\r\n  state = {\r\n    error: ``,\r\n    rows: [],\r\n    data: [],\r\n    creatingLis: [],\r\n    creationAllowed: true,\r\n  }\r\n\r\n  onFillListeners = []\r\n\r\n  componentDidMount() {\r\n    this.setCreatingElements()\r\n\r\n    fetchWithStatusProcessing(this.props.fetchGetAddress, {\r\n      method: `GET`,\r\n      headers: { Authentication: `Bearer ${getToken()}` },\r\n    }).then(data => {\r\n      if (data.error) {\r\n        const { code, error } = data\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (data.success) {\r\n        const { code, success } = data\r\n        return console.info({ code, success })\r\n      }\r\n\r\n      this.addToTable(data[this.props.responseGetDataName])\r\n      this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n    })\r\n  }\r\n\r\n  updateNewField = e => {\r\n    const element = e.target || e\r\n\r\n    this.setState({ [element.name]: element.value })\r\n  }\r\n\r\n  deleteRow = id => {\r\n    fetchWithStatusProcessing(\r\n      this.props.fetchDeleteAddress.replace(\r\n        this.props.deleteIdParameterName,\r\n        id\r\n      ),\r\n      {\r\n        method: `DELETE`,\r\n        headers: { Authentication: `Bearer ${getToken()}` },\r\n      }\r\n    ).then(({ code, error, success }) => {\r\n      if (error) {\r\n        return console.error({ code, error })\r\n      }\r\n\r\n      if (success) {\r\n        this.setState(old => ({\r\n          rows: old.rows.filter(({ key }) => key !== id),\r\n        }))\r\n\r\n        this.onFillListeners.forEach(({ ref, field }) => ref.current[field]())\r\n\r\n        return console.info({ code, success })\r\n      }\r\n    })\r\n  }\r\n\r\n  sendCreationData = () => {\r\n    const {\r\n      error,\r\n      rows,\r\n      data,\r\n      creatingLis,\r\n      creationAllowed,\r\n      ...fieldsData\r\n    } = this.state\r\n\r\n    this.setCreatingElements()\r\n    this.setState({ creationAllowed: false })\r\n\r\n    fetchWithStatusProcessing(this.props.fetchPostAddress, {\r\n      method: `POST`,\r\n      headers: {\r\n        Authentication: `Bearer ${getToken()}`,\r\n        \"Content-Type\": `application/json`,\r\n      },\r\n      body: JSON.stringify({ ...fieldsData, ...this.props.staticPostBodyData }),\r\n    }).then(data => {\r\n      this.setState({ creationAllowed: true })\r\n\r\n      if (data.error) {\r\n        const { code, error } = data\r\n\r\n        console.error({ code, error })\r\n\r\n        return this.setState({ error: ERRORS[data.code] })\r\n      }\r\n\r\n      this.setState({ error: `` })\r\n\r\n      if (data.success) {\r\n        //TODO get value from every cell and make new row\r\n        const { code, success } = data\r\n\r\n        console.info({ code, success })\r\n\r\n        return isBrowser() && window.location.reload()\r\n      }\r\n\r\n      if (this.props.responsePostDataName) {\r\n        this.addToTable(data[this.props.responsePostDataName])\r\n      }\r\n    })\r\n  }\r\n\r\n  /** @param {object[]} itemOrItems */\r\n  addToTable = itemOrItems => {\r\n    if (!Array.isArray(itemOrItems)) itemOrItems = [itemOrItems]\r\n\r\n    const newRows = itemOrItems.map(obj => {\r\n      const fields = []\r\n\r\n      for (const field of this.props.objectsFields) {\r\n        if (typeof field === `object`) {\r\n          fields.push(\r\n            <td key={field.name}>{field.processor(obj[field.name])}</td>\r\n          )\r\n        } else fields.push(<td key={field}>{obj[field]}</td>)\r\n      }\r\n\r\n      return (\r\n        <tr key={obj.id}>\r\n          {fields}\r\n\r\n          <td>\r\n            <button type=\"button\" onClick={() => this.deleteRow(obj.id)}>\r\n              {this.props.buttonDelete}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    this.setState(old => ({\r\n      rows: [...newRows, ...old.rows],\r\n      data: [...itemOrItems, ...old.data],\r\n    }))\r\n  }\r\n\r\n  setCreatingElements = () => {\r\n    const creatingLis = []\r\n\r\n    for (let i = 0; i < this.props.objectsFields.length; ++i) {\r\n      const objectField = this.props.objectsFields[i]\r\n      const objectFieldName = objectField.name || objectField\r\n\r\n      const customInputField = this.props.inputFieldsComponents?.[\r\n        objectFieldName\r\n      ]\r\n      const colSpan = this.props.colSpans?.[objectFieldName]\r\n\r\n      let element = (\r\n        <input onChange={this.updateNewField} name={objectFieldName} />\r\n      )\r\n\r\n      if (colSpan) i += colSpan - 1\r\n      if (customInputField) {\r\n        if (!(`props` in customInputField)) customInputField.props = {}\r\n        if (typeof customInputField.component == `string`) {\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n            />\r\n          )\r\n        } else {\r\n          const ref = React.createRef()\r\n\r\n          element = (\r\n            <customInputField.component\r\n              name={objectFieldName}\r\n              {...customInputField.props}\r\n              onChange={this.updateNewField}\r\n              getTableData={() => this.state.data}\r\n              ref={ref}\r\n            />\r\n          )\r\n\r\n          if (customInputField.onTableFillTrigger) {\r\n            this.onFillListeners.push({\r\n              ref,\r\n              field: customInputField.onTableFillTrigger,\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      creatingLis.push(\r\n        <td\r\n          key={`${Date.now()}.${Math.random()}`}\r\n          colSpan={colSpan}\r\n          className=\"inputCell\"\r\n        >\r\n          {element}\r\n        </td>\r\n      )\r\n    }\r\n\r\n    this.setState({ creatingLis })\r\n  }\r\n\r\n  render = () => (\r\n    <table className=\"table\">\r\n      <thead className=\"thead\">\r\n        <tr>\r\n          {this.props.titleFields.map(field => (\r\n            <td key={field}>{field}</td>\r\n          ))}\r\n\r\n          <td>Akcja</td>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr>\r\n          {this.state.creatingLis}\r\n\r\n          <td>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.sendCreationData}\r\n              disabled={!this.state.creationAllowed}\r\n            >\r\n              {this.props.buttonAdd}\r\n            </button>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr className=\"emptyRow\">\r\n          <td colSpan=\"5\">{this.state.error}</td>\r\n        </tr>\r\n        <tr className=\"emptyRow\" />\r\n\r\n        {this.state.rows}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTableForm.propTypes = {\r\n  fetchGetAddress: PropTypes.string.isRequired,\r\n  fetchDeleteAddress: PropTypes.string.isRequired,\r\n  fetchPostAddress: PropTypes.string.isRequired,\r\n\r\n  deleteIdParameterName: PropTypes.string.isRequired,\r\n  responseGetDataName: PropTypes.string.isRequired,\r\n  responsePostDataName: PropTypes.string,\r\n  staticPostBodyData: PropTypes.objectOf(PropTypes.string).isRequired,\r\n\r\n  buttonAdd: PropTypes.string.isRequired,\r\n  buttonDelete: PropTypes.string.isRequired,\r\n\r\n  objectsFields: PropTypes.array.isRequired,\r\n  titleFields: PropTypes.array.isRequired,\r\n  inputFieldsComponents: PropTypes.object,\r\n  colSpans: PropTypes.object,\r\n}\r\n"],"sourceRoot":""}